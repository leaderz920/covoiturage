rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Fonction pour vérifier si l'utilisateur est admin
    function isAdmin() {
      // Vérifie si l'utilisateur est authentifié et a le champ isAdmin=true
      return request.auth != null && 
             exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Règles pour la collection "announcements"
    match /announcements/{announcementId} {
      allow read: if true;
      allow write: if request.auth != null;
    }
    
    // Règles pour la collection "users"
    match /users {
      // Permettre aux administrateurs de lister tous les utilisateurs
      allow list: if isAdmin();
      
      // Règles pour les documents individuels
      match /{userId} {
        // Permettre à un utilisateur de lire et modifier uniquement ses propres données
        // ou à un administrateur d'accéder à tout
        allow read: if isAdmin() || (request.auth != null && request.auth.uid == userId);
        allow update, delete: if isAdmin() || (request.auth != null && request.auth.uid == userId);
        
        // Autoriser la création pour les utilisateurs authentifiés
        allow create: if request.auth != null;
      }
    }
    
    // Règles pour les opérations d'administration
    match /tokenOperations/{document=**} {
      allow read, write: if isAdmin();
    }
    
    // Journal des actions administratives
    match /adminLogs/{logId} {
      allow read: if isAdmin();
      allow write: if isAdmin();
    }
  }
}